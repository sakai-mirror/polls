<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<!-- This file generated by Sakai App Builder -AZ -->
<beans>

	<!-- create a DAO bean, use the hibernate implementation -->
	<bean id="org.sakaiproject.tool.poll.api.PollListManagerDaoTarget"
		class="org.sakaiproject.poll.dao.impl.PollListManagerDaoImpl"
		lazy-init="true" init-method="init">
		<property name="sessionFactory"
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
		<property name="idManager"
			ref="org.sakaiproject.id.api.IdManager" />
		<property name="securityService"
			ref="org.sakaiproject.authz.api.SecurityService" />
		<property name="toolManager"
			ref="org.sakaiproject.tool.api.ToolManager" />
		<property name="eventTrackingService"
			ref="org.sakaiproject.event.api.EventTrackingService" />
		<property name="entityManager"
			ref="org.sakaiproject.entity.api.EntityManager" />
		<property name="functionManager"
			ref="org.sakaiproject.authz.api.FunctionManager" />
        <property name="authzGroupService"
            ref="org.sakaiproject.authz.api.AuthzGroupService" />
	</bean>

	<bean id="org.sakaiproject.tool.poll.api.PollVoteManagerDaoTarget"
		class="org.sakaiproject.poll.dao.impl.PollVoteManagerDaoImpl"
		lazy-init="true">
		<property name="sessionFactory"
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
		<property name="toolManager"
			ref="org.sakaiproject.tool.api.ToolManager" />
		<property name="eventTrackingService"
			ref="org.sakaiproject.event.api.EventTrackingService" />
        <property name="securityService"
            ref="org.sakaiproject.authz.api.SecurityService" />
	</bean>


	<!-- This wraps our DAO so that the transactions are managed -->
	<bean id="org.sakaiproject.tool.poll.api.PollListManager"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true">
		<property name="transactionManager"
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="target">
			<ref
				bean="org.sakaiproject.tool.poll.api.PollListManagerDaoTarget" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="org.sakaiproject.tool.poll.api.PollVoteManagerDao"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		lazy-init="true">
		<property name="transactionManager"
			ref="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		<property name="target">
			<ref
				bean="org.sakaiproject.tool.poll.api.PollVoteManagerDaoTarget" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- create a data preloading bean that has transaction protection -->
	<!-- <bean id="org.sakaiproject.dhcrud.dao.PreloadData"
		class="org.sakaiproject.dhcrud.dao.impl.PreloadDataImpl"
		init-method="init">
		<property name="dao"
		ref="org.sakaiproject.dhcrud.dao.DhcrudDao" />
		</bean>
	-->
</beans>
